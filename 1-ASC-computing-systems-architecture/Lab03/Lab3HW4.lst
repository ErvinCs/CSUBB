     1                                  ; (a*a+b/c-1)/(b+c)+d-x; 
     2                                  ; a,c : word; b : byte; d : doubleword; x : qword
     3                                  ; Signed
     4                                  ; Result: -10
     5                                  bits 32 
     6                                  global start        
     7                                  extern exit               
     8                                  import exit msvcrt.dll    
     9                                                            
    10                                  segment data use32 class=data
    11 00000000 1400                        a DW 20
    12 00000002 64                          b DB 100
    13 00000003 3200                        c DW 50
    14 00000005 F4010000                    d DD 500
    15 00000009 0002000000000000            x DQ 512
    16 00000011 00000000                    temp DD 0
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 66A1[00000000]                  MOV AX, [a]         ; AX = a
    21 00000006 66F72D[00000000]                IMUL WORD [a]        ; DX:AX = a*a
    22 0000000D 66A3[11000000]                  MOV [temp], AX
    23 00000013 668915[13000000]                MOV [temp+2], DX    ; temp = a*a
    24                                      
    25 0000001A 66B80000                        MOV AX, 0
    26 0000001E A0[02000000]                    MOV AL, [b]
    27 00000023 66BA0000                        MOV DX, 0           ; DX:AX = b
    28 00000027 66F73D[03000000]                IDIV WORD [c]       ; AX = b/c
    29 0000002E 6683E801                        SUB AX, 1           ; AX = b/c - 1
    30 00000032 660305[11000000]                ADD AX, [temp]
    31 00000039 661315[13000000]                ADC DX, [temp+2]    ; DX:AX = a*a+b/c-1 = 401
    32                                          
    33 00000040 8A1D[02000000]                  MOV BL, [b]
    34 00000046 B700                            MOV BH, 0
    35 00000048 66031D[03000000]                ADD BX, [c]         ; BX = b+c = 150
    36                                          
    37 0000004F 66F7FB                          IDIV WORD BX        ; AX = (a*a+b/c-1)/(b+c) = 2
    38                                          
    39 00000052 6689C2                          MOV DX, AX          ; DX = (a*a+b/c-1)/(b+c)
    40 00000055 668B1D[05000000]                MOV BX, [d]
    41 0000005C 668B0D[07000000]                MOV CX, [d+2]       ; CX:BX = d = 500
    42 00000063 6601D3                          ADD BX, DX
    43 00000066 6683D100                        ADC CX, 0           ; CX:BX = (a*a+b/c-1)/(b+c)+d
    44                                          
    45 0000006A 662B1D[09000000]                SUB BX, [x]
    46 00000071 661B0D[0B000000]                SBB CX, [x+2]       ; CX:BX = (a*a+b/c-1)/(b+c)+d-x 
    47                                          
    48 00000078 6A00                            push    dword 0      
    49 0000007A FF15[00000000]                  call    [exit]       
