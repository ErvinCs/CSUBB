     1                                  ; Lab10 - Problem15
     2                                  ; A file name and a text (defined in the data segment) are given. 
     3                                  ; The text contains lowercase letters, uppercase letters, digits and special characters. 
     4                                  ; Replace all the special characters from the given text with the character 'X'. 
     5                                  ; Create a file with the given name and write the generated text to file.
     6                                  
     7                                  bits 32 
     8                                  global start        
     9                                  extern exit, fopen, fread, fprintf, fwrite, fclose               
    10                                  import exit msvcrt.dll    
    11                                  import fopen msvcrt.dll  
    12                                  import fread msvcrt.dll     
    13                                  import fprintf msvcrt.dll    
    14                                  import fwrite msvcrt.dll  
    15                                  import fclose msvcrt.dll   
    16                                                            
    17                                  segment data use32 class=data
    18 00000000 48656C6C2829204021-         text DB "Hell() @! #$ 0@0", 0
    18 00000009 2023242030403000   
    19                                      len_text EQU ($-text)
    20 00000011 6F757470757466696C-         outputfile DB "outputfile.txt", 0
    20 0000001A 652E74787400       
    21 00000020 7700                        access_write DB "w", 0               
    22 00000022 00000000                    fdw DD 0
    23 00000026 4572726F722100              err_msg DB "Error!", 0
    24 0000002D 21402324255E262A28-         special DB "!@#$%^&*()-=+.,><;:|][{}", 0
    24 00000036 292D3D2B2E2C3E3C3B-
    24 0000003F 3A7C5D5B7B7D00     
    25 00000046 00000000                    curr_char DD 0
    26                                      ; Expected: H3llXXXXXXXXXwXrX
    27                                  
    28                                  segment code use32 class=code
    29                                      start:               
    30                                          ; Create/Open outputfile - fopen(path, mode)
    31 00000000 68[20000000]                    PUSH DWORD access_write
    32 00000005 68[11000000]                    PUSH DWORD outputfile
    33 0000000A FF15[00000000]                  CALL [fopen]
    34 00000010 83C408                          ADD ESP, 4*2
    35                                          ; Store & validate fdw
    36 00000013 A3[22000000]                    MOV [fdw], EAX
    37 00000018 83F800                          CMP EAX, 0
    38 0000001B 7464                            JE end_prog
    39                                          
    40                                          
    41                                          ;MOV EDX, 0
    42                                          ;MOV DL, [text]
    43 0000001D BE[00000000]                    MOV ESI, text
    44 00000022 B911000000                      MOV ECX, len_text
    45 00000027 FC                              CLD
    46 00000028 E348                            JECXZ close
    47                                          loop_cmp:
    48 0000002A B800000000                          MOV EAX, 0
    49 0000002F AC                                  LODSB           ; AL = text[ECX]
    50                                              
    51 00000030 3C7A                                CMP AL, 122     ; 'z'
    52 00000032 7714                                JA isSpecial
    53 00000034 3C61                                CMP AL, 97      ; 'a'
    54 00000036 7314                                JAE write_file
    55 00000038 3C5A                                CMP AL, 90      ; 'Z'
    56 0000003A 770C                                JA isSpecial
    57 0000003C 3C41                                CMP AL, 65      ; 'A'
    58 0000003E 730C                                JAE write_file
    59 00000040 3C39                                CMP AL, 57      ; '9'
    60 00000042 7704                                JA isSpecial
    61 00000044 3C30                                CMP AL, 48      ; '0'
    62 00000046 7304                                JAE write_file
    63                                              
    64                                              isSpecial:
    65 00000048 B058                                MOV AL, 'X'
    66 0000004A EB00                                JMP write_file
    67                                              
    68                                              write_file:
    69 0000004C 60                                  pusha
    70 0000004D A3[46000000]                        MOV [curr_char], EAX
    71                                              ; Write into fdw 1 time 1 byte (curr_char) - fwrite(string ptr, integer size, integer n, FILE * handle) - writes n times size bytes from
    72 00000052 FF35[22000000]                      PUSH DWORD [fdw]        ; Write into fdw
    73 00000058 6A01                                PUSH DWORD 1            ; Write 1 time
    74 0000005A 6A01                                PUSH DWORD 1            ; Write 1 byte
    75 0000005C 68[46000000]                        PUSH DWORD curr_char    ; From curr_char
    76 00000061 FF15[00000000]                      CALL [fwrite]
    77 00000067 83C410                              ADD ESP, 4*4
    78                                              ; Check for read end
    79 0000006A 83F800                              CMP EAX, 0
    80 0000006D 7403                                JE close
    81 0000006F 61                                  popa
    82                                              
    83 00000070 E2B8                            LOOP loop_cmp        
    84                                          
    85                                          close:
    86                                          ; Close outputfile - fclose(FILE* handle)
    87 00000072 FF35[22000000]                  PUSH DWORD [fdw]
    88 00000078 FF15[00000000]                  CALL [fclose]
    89 0000007E 83C404                          ADD ESP, 4
    90                                          
    91                                          end_prog:
    92 00000081 6A00                            PUSH DWORD 0
    93 00000083 FF15[00000000]                  CALL [exit]        
