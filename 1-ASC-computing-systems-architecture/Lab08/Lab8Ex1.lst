     1                                  ; for(int i = 0; i < len(a); i++)
     2                                  ;   printf("a[%d]=%d", i, a[i]);
     3                                  
     4                                  bits 32 
     5                                  global start        
     6                                  extern exit               
     7                                  extern printf
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll
    10                                                            
    11                                  segment data use32 class=data
    12 00000000 010000000200000003-         a DD 1, 2, 3, 10, 15, 20
    12 00000009 0000000A0000000F00-
    12 00000012 000014000000       
    13                                      len EQU ($-a)/4
    14 00000018 615B25645D203D2025-         s_format DB "a[%d] = %d, ", 0     ; %d - expects a double-word
    14 00000021 642C2000           
    15                                  
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 BE[00000000]                    MOV ESI, a
    19 00000005 B906000000                      MOV ECX, len
    20                                          
    21 0000000A E31C                            JECXZ end_prog 
    22 0000000C FC                              CLD
    23                                          
    24 0000000D BB00000000                      MOV EBX, 0                  ; Use EBX for string index
    25                                          loop1:
    26 00000012 AD                                  LODSD
    27                                              ; printf(format(3rd), EBX(2nd), EAX(1st))
    28 00000013 60                                  PUSHA                   ; Save all registers on the stack
    29                                              
    30 00000014 50                                  PUSH EAX
    31 00000015 53                                  PUSH EBX
    32 00000016 68[18000000]                        PUSH s_format
    33                                              
    34 0000001B FF15[00000000]                      CALL [printf]
    35                                      
    36 00000021 83C40C                              ADD ESP, 4*3            ; size = 4, count = 3
    37                                                                      ; Adding to the stack pointer ESP moves it towards Base, substracting from it moves it upwards
    38 00000024 61                                  POPA
    39 00000025 43                                  INC EBX
    40                                              
    41 00000026 E2EA                                loop loop1
    42                                          end_prog:
    43                                          
    44 00000028 6A00                            push    dword 0      
    45 0000002A FF15[00000000]                  call    [exit]       
